using AutoMapper;
using RedBubble.Application.DTOs.Order;
using RedBubble.Application.DTOs.OrderItem;
using RedBubble.Domain.Entities.Models;
using RedBubble.Domain.Enums;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using System.Text;
using System.Threading.Tasks;

namespace RedBubble.Application.Mappers
{
    public class OrderProfile : Profile
    {
        public OrderProfile()
        {
            // convert from CreateOrderDTO to Order
            CreateMap<CreateOrderDTO, Order>()
                .ForMember(dest => dest.Id, opt => opt.Ignore()) // Generated by DB
                .ForMember(dest => dest.TotalAmount, opt => opt.Ignore()) // Calculated
                .ForMember(dest => dest.Status, opt => opt.Ignore()) // Set default in service
                .ForMember(dest => dest.OrderDate, opt => opt.Ignore()) // Set in service
                .ForMember(dest => dest.UpdatedAt, opt => opt.Ignore()) // Set in service
                .ForMember(dest => dest.CustomerId, opt => opt.Ignore()) // From logged-in user
                .ForMember(dest => dest.Customer, opt => opt.Ignore());// Avoid circular refs

            // conver from UpdateOrderDTO to Order
            //await _mapper.Map(updateOrderDTO, order);
          
            CreateMap<UpdateOrderDTO, Order>();

        }
    }
}
